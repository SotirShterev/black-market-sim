//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.ArtifactService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ArtifactService.IArtifactService")]
    public interface IArtifactService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/GetArtifacts", ReplyAction="http://tempuri.org/IArtifactService/GetArtifactsResponse")]
        ApplicationService.DTOs.ArtifactDTO[] GetArtifacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/GetArtifacts", ReplyAction="http://tempuri.org/IArtifactService/GetArtifactsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.ArtifactDTO[]> GetArtifactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/GetArtifactsByPrice", ReplyAction="http://tempuri.org/IArtifactService/GetArtifactsByPriceResponse")]
        ApplicationService.DTOs.ArtifactDTO[] GetArtifactsByPrice(double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/GetArtifactsByPrice", ReplyAction="http://tempuri.org/IArtifactService/GetArtifactsByPriceResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.ArtifactDTO[]> GetArtifactsByPriceAsync(double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/GetArtifactById", ReplyAction="http://tempuri.org/IArtifactService/GetArtifactByIdResponse")]
        ApplicationService.DTOs.ArtifactDTO GetArtifactById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/GetArtifactById", ReplyAction="http://tempuri.org/IArtifactService/GetArtifactByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.ArtifactDTO> GetArtifactByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/PostArtifact", ReplyAction="http://tempuri.org/IArtifactService/PostArtifactResponse")]
        string PostArtifact(ApplicationService.DTOs.ArtifactDTO artifactDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/PostArtifact", ReplyAction="http://tempuri.org/IArtifactService/PostArtifactResponse")]
        System.Threading.Tasks.Task<string> PostArtifactAsync(ApplicationService.DTOs.ArtifactDTO artifactDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/PutArtifact", ReplyAction="http://tempuri.org/IArtifactService/PutArtifactResponse")]
        string PutArtifact(ApplicationService.DTOs.ArtifactDTO artifactDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/PutArtifact", ReplyAction="http://tempuri.org/IArtifactService/PutArtifactResponse")]
        System.Threading.Tasks.Task<string> PutArtifactAsync(ApplicationService.DTOs.ArtifactDTO artifactDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/DeleteArtifact", ReplyAction="http://tempuri.org/IArtifactService/DeleteArtifactResponse")]
        string DeleteArtifact(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArtifactService/DeleteArtifact", ReplyAction="http://tempuri.org/IArtifactService/DeleteArtifactResponse")]
        System.Threading.Tasks.Task<string> DeleteArtifactAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArtifactServiceChannel : MVC.ArtifactService.IArtifactService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArtifactServiceClient : System.ServiceModel.ClientBase<MVC.ArtifactService.IArtifactService>, MVC.ArtifactService.IArtifactService {
        
        public ArtifactServiceClient() {
        }
        
        public ArtifactServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ArtifactServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArtifactServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArtifactServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ApplicationService.DTOs.ArtifactDTO[] GetArtifacts() {
            return base.Channel.GetArtifacts();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.ArtifactDTO[]> GetArtifactsAsync() {
            return base.Channel.GetArtifactsAsync();
        }
        
        public ApplicationService.DTOs.ArtifactDTO[] GetArtifactsByPrice(double price) {
            return base.Channel.GetArtifactsByPrice(price);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.ArtifactDTO[]> GetArtifactsByPriceAsync(double price) {
            return base.Channel.GetArtifactsByPriceAsync(price);
        }
        
        public ApplicationService.DTOs.ArtifactDTO GetArtifactById(int id) {
            return base.Channel.GetArtifactById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.ArtifactDTO> GetArtifactByIdAsync(int id) {
            return base.Channel.GetArtifactByIdAsync(id);
        }
        
        public string PostArtifact(ApplicationService.DTOs.ArtifactDTO artifactDTO) {
            return base.Channel.PostArtifact(artifactDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostArtifactAsync(ApplicationService.DTOs.ArtifactDTO artifactDTO) {
            return base.Channel.PostArtifactAsync(artifactDTO);
        }
        
        public string PutArtifact(ApplicationService.DTOs.ArtifactDTO artifactDTO) {
            return base.Channel.PutArtifact(artifactDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutArtifactAsync(ApplicationService.DTOs.ArtifactDTO artifactDTO) {
            return base.Channel.PutArtifactAsync(artifactDTO);
        }
        
        public string DeleteArtifact(int id) {
            return base.Channel.DeleteArtifact(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteArtifactAsync(int id) {
            return base.Channel.DeleteArtifactAsync(id);
        }
    }
}
