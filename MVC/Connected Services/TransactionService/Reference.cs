//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.TransactionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionService.ITransactionService")]
    public interface ITransactionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactions", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionsResponse")]
        ApplicationService.DTOs.TransactionDTO[] GetTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactions", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.TransactionDTO[]> GetTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactionsByCountry", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionsByCountryResponse")]
        ApplicationService.DTOs.TransactionDTO[] GetTransactionsByCountry(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactionsByCountry", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionsByCountryResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.TransactionDTO[]> GetTransactionsByCountryAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactionById", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionByIdResponse")]
        ApplicationService.DTOs.TransactionDTO GetTransactionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/GetTransactionById", ReplyAction="http://tempuri.org/ITransactionService/GetTransactionByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.TransactionDTO> GetTransactionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/PostTransaction", ReplyAction="http://tempuri.org/ITransactionService/PostTransactionResponse")]
        string PostTransaction(ApplicationService.DTOs.TransactionDTO transactionDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/PostTransaction", ReplyAction="http://tempuri.org/ITransactionService/PostTransactionResponse")]
        System.Threading.Tasks.Task<string> PostTransactionAsync(ApplicationService.DTOs.TransactionDTO transactionDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/PutTransaction", ReplyAction="http://tempuri.org/ITransactionService/PutTransactionResponse")]
        string PutTransaction(ApplicationService.DTOs.TransactionDTO transactionDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/PutTransaction", ReplyAction="http://tempuri.org/ITransactionService/PutTransactionResponse")]
        System.Threading.Tasks.Task<string> PutTransactionAsync(ApplicationService.DTOs.TransactionDTO transactionDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/DeleteTransaction", ReplyAction="http://tempuri.org/ITransactionService/DeleteTransactionResponse")]
        string DeleteTransaction(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionService/DeleteTransaction", ReplyAction="http://tempuri.org/ITransactionService/DeleteTransactionResponse")]
        System.Threading.Tasks.Task<string> DeleteTransactionAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionServiceChannel : MVC.TransactionService.ITransactionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionServiceClient : System.ServiceModel.ClientBase<MVC.TransactionService.ITransactionService>, MVC.TransactionService.ITransactionService {
        
        public TransactionServiceClient() {
        }
        
        public TransactionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ApplicationService.DTOs.TransactionDTO[] GetTransactions() {
            return base.Channel.GetTransactions();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.TransactionDTO[]> GetTransactionsAsync() {
            return base.Channel.GetTransactionsAsync();
        }
        
        public ApplicationService.DTOs.TransactionDTO[] GetTransactionsByCountry(string country) {
            return base.Channel.GetTransactionsByCountry(country);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.TransactionDTO[]> GetTransactionsByCountryAsync(string country) {
            return base.Channel.GetTransactionsByCountryAsync(country);
        }
        
        public ApplicationService.DTOs.TransactionDTO GetTransactionById(int id) {
            return base.Channel.GetTransactionById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.TransactionDTO> GetTransactionByIdAsync(int id) {
            return base.Channel.GetTransactionByIdAsync(id);
        }
        
        public string PostTransaction(ApplicationService.DTOs.TransactionDTO transactionDTO) {
            return base.Channel.PostTransaction(transactionDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostTransactionAsync(ApplicationService.DTOs.TransactionDTO transactionDTO) {
            return base.Channel.PostTransactionAsync(transactionDTO);
        }
        
        public string PutTransaction(ApplicationService.DTOs.TransactionDTO transactionDTO) {
            return base.Channel.PutTransaction(transactionDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutTransactionAsync(ApplicationService.DTOs.TransactionDTO transactionDTO) {
            return base.Channel.PutTransactionAsync(transactionDTO);
        }
        
        public string DeleteTransaction(int id) {
            return base.Channel.DeleteTransaction(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteTransactionAsync(int id) {
            return base.Channel.DeleteTransactionAsync(id);
        }
    }
}
